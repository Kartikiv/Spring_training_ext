package com.student.data.beans;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;

import org.checkerframework.checker.units.qual.degrees;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.List;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

public class PDFGenerator {
	public static ByteArrayInputStream generatePdf(java.util.List<FetchStudentDetailsWithMarksAndDepartmentNamesWithNoReplications> liststu) throws DocumentException, MalformedURLException, IOException {
		Document document = new Document(PageSize.A4);
		ByteArrayOutputStream out = new ByteArrayOutputStream();
		PdfWriter writer = PdfWriter.getInstance(document, out);

		document.open();
		Font f=new Font(FontFamily.COURIER,20.0f,Font.BOLD,BaseColor.BLACK);
		Paragraph Tittle=new Paragraph("Invoice",f);
		
		Tittle.setAlignment(Element.ALIGN_CENTER);
		document.add(Tittle);

//		PdfContentByte canvas = writer.getDirectContent();
//		canvas.moveTo(document.getPageSize().getWidth() / 2, document.getPageSize().getHeight());
//		canvas.lineTo(document.getPageSize().getWidth() / 2, document.getPageSize().getHeight() / 1.18);
//		canvas.stroke();
//
//		canvas.moveTo(document.getPageSize().getWidth() / 2, document.getPageSize().getHeight() / 1.18);
//		canvas.lineTo(document.getPageSize().getWidth() / 1, document.getPageSize().getHeight() / 1.18);
//		canvas.stroke();
//		canvas.moveTo(document.getPageSize().getWidth() / 2, document.getPageSize().getHeight() / 1.18);
//		canvas.lineTo(0, document.getPageSize().getHeight() / 1.18);
//		canvas.stroke();
		Font font = FontFactory.getFont(FontFactory.COURIER, 14, BaseColor.BLACK);
		
       PdfContentByte para =writer.getDirectContent();
      
		
		
		Image img = new Image(Image.getInstance(
				"C:\\Users\\karth\\OneDrive\\Desktop\\Crop-Yield-Prediction-using-ML-master\\imgs\\input1.jpg")) {

		};
		img.setAbsolutePosition(5, document.top()-1.06f);
		
		img.setAlignment(Element.ALIGN_LEFT);
		img.setScaleToFitHeight(true);
		img.setScaleToFitLineWhenOverflow(true);
		img.scalePercent(3);
	
		
		document.add(img);
		
		PdfPTable table = new PdfPTable(2);
		Paragraph paragraph = new Paragraph();
		paragraph.setAlignment(Element.ALIGN_LEFT);
		paragraph.add("orgId: 1");
		paragraph.add(Chunk.NEWLINE);
		paragraph.add("name : Drucare");
		Paragraph paragraph2 = new Paragraph();
		List list = new List();

		paragraph2.setAlignment(Element.ALIGN_LEFT);
		paragraph2.add("Patient Name: kartik");
		paragraph2.add(Chunk.NEWLINE);
        paragraph2.add("Doctor : Dr Ram Mohan");
		paragraph2.add(Chunk.NEWLINE);
		paragraph2.add("Diagnosis: Asthama");
		paragraph2.add(Chunk.NEWLINE);
		paragraph2.add("Joined Date : " + java.time.LocalDate.now());
       paragraph2.add(list);
	   PdfPCell cell=new PdfPCell();
	   cell.addElement(paragraph);
	   PdfPCell cell1=new PdfPCell();
	   cell1.addElement(paragraph2);
	  
	   table.addCell(cell);
	   table.addCell(cell1);
	   table.setTotalWidth(document.getPageSize().getWidth()-50);
	   table.writeSelectedRows(0, -1, document.left()-1, document.top()-35,para);
	  PdfPTable table1=new  PdfPTable(4);
	  PdfPCell idCell=new PdfPCell(new Phrase("Student Name"));
	  PdfPCell ServiceCell=new PdfPCell(new Phrase("Student address"));
	  PdfPCell quantiCell=new PdfPCell(new Phrase("Student city"));
	  PdfPCell priceCell=new PdfPCell(new Phrase("department"));
	  table1.addCell(idCell);
	  table1.addCell(ServiceCell);
	  table1.addCell(quantiCell);
	  table1.addCell(priceCell);
	  table1.setHeaderRows(4);
	 
	   table1.setTotalWidth(document.getPageSize().getWidth()-50);
	   for(FetchStudentDetailsWithMarksAndDepartmentNamesWithNoReplications fetchstu:liststu) {
		   table1.addCell(""+fetchstu.getName());
		   table1.addCell(new Phrase(fetchstu.getAddress()));
		   table1.addCell(fetchstu.getCityNm());
		  
		   PdfPTable deptable=new PdfPTable(2);
		   for(StudentDepartment dept: fetchstu.getDepartmentList()) {
            deptable.addCell(dept.getDepartmentName());
            deptable.addCell(dept.getDepartmentId()+"");
		   }
		   table1.addCell(deptable);
		   
	   }
	  table1.writeSelectedRows(0, -1, document.left()-1, document.top()-table.getTotalHeight()-45,para);
	 
		document.close();
		return new ByteArrayInputStream(out.toByteArray());
	}
}
	